# - name: template
#   description: |-
#     aaa
#   target:
#     model_slug: aaa
#   option:
#     q: aaa
#   returns:
#     aaa
#   example:
#     - code: |-
#         aaa
#       result: |-
#         aaa

- name: post
  description: |-
    ツイートをアカウント `twitter` でツイートする。
  target:
    - name: twitter
      description: 投稿するTwitter World。
  option:
    - name: body
      description: 本文(String)。
    - name: to
      description: 宛先となる Plugin::Twitter::User または Plugin::Twitter::Tweet のインスタンスを列挙するEnumerable。混在してもよく、ツイートが含まれる場合は、投稿されるツイートは最初に見つかったツイートに対するリプライとなる。1件だけの場合は、配列ではなくインスタンスを直接渡すことも出来る。宛先がない場合は省略するか `nil` または `[]` を渡す。
  returns: |-
    投稿した Plugin::Twitter::Tweet のインスタンス。
  example:
    - title: 「うんこでた」とツイートする
      code: |-
        world, = Plugin.filtering(:world_current, nil)

        post(world, body: "うんこでた")
      result: "(なし)"
    - title: ツイートを送信し、成否を受け取る
      code: |-
        world, = Plugin.filtering(:world_current, nil)

        post(world, body: "うんこでた").next{|t|
          notice "ツイートできました。内容: #{t.message}"
        }.trap{|exc|
          error exc
        }
      result: "ツイートできました。内容: うんこでた"
    - title: リプライを送る
      code: |-
        world, = Plugin.filtering(:world_current, nil)
        tweet = # (Plugin::Twitter::Tweet のインスタンス)

        post(world, body: "うんこでた", to: tweet)
      result: "(なし)"

- name: "search"
  description: |-
    キーワード `q` にマッチするツイートを検索する。
    原則、フォロイーかどうかに関わらず、全てのツイートを対象にする。
    Twitter APIの制約上、正確に取得できるとは限らない。
  target:
    - name: twitter
      description: 検索するTwitter World。Twitterは検索APIにアクセスするためにAPIトークンが必須となっている
  option:
    - name: q
      description: クエリ文字列(String)。Twitter検索で用いることが出来る各種検索演算子を利用できる。
    - name: count
      description: 戻り値に含める最大件数(Integer)。あくまでTwitterにリクエストする件数であるため、本当にこの件数が返ってくるとは限らない。
  returns: |-
    検索結果を列挙するEnumerable。
    列挙される各ツイートはPlugin::Twitter::Tweetのインスタンス。
  example:
    - code: |-
        world, = Plugin.filtering(:world_current, nil)
        search(world, q: "mikutter", count: 5).next{ |tweets|
          tweets.each do |tweet|
            puts "#{tweet.user}: #{tweet} #{tweet.perma_link}"
          end
        }.trap{ |e|
          # エラー時の処理
          error e
        }
      result: |-
        MysticDoll: マストドンですが、mikutterのところとmaud.ioのところの二箇所を気分で使ってます https://twitter.com/MysticDoll/status/935391468201549825
        MysticDoll: https://t.co/gBTqbWEv9q https://twitter.com/MysticDoll/status/935390450038464512
        vivir_en_paz: @mikutter あーあって、思ったもんね、おれが。笑 https://twitter.com/vivir_en_paz/status/935356722486456320
        vivir_en_paz: @mikutter 見た目にはわからん感じだけどねー。
        来週歯医者で怒られてきます、はい。 https://twitter.com/vivir_en_paz/status/935351722263724032
        cametan_001: 【MAD】 Mikutter Ad. 【Long Version】: https://t.co/0GYL2hwd3U via @ YouTube https://twitter.com/cametan_001/status/935329517677060096

- name: retweet
  description: |-
    Twitterで、リツイートを行う。
  target:
    - name: twitter
      description: リツイートを行うアカウント
    - name: tweet
      description: リツイートするツイート
  returns:
    リツイートした結果生成されたツイート(Plugin::Twitter::Tweet)
  example:
    - code: |-
        world, = Plugin.filtering(:world_current, nil)
        tweet = # (Plugin::Twitter::Tweetのインスタンス)
        
        retweet(world, tweet).next{|retweet|
          puts retweet
        }.trap{|exc|
          error exc
        }
      result: "RT: @toshi_a うんこでた"

- name: retweeted
  description: |-
    アカウント `twitter` が `tweet` をリツイートした時の `Plugin::Twitter::Tweet` を取得する。APIリクエストを発生させず、Tweetオブジェクトに入っている状態のみを参照する。Twitter APIからこの情報を正確に取得する方法は提供されていない。

    `retweeted` はAPIに問い合わせず、分かる範囲で既にリツイートしている場合はそのtweetを、わからないか、リツイートしていない場合は失敗する。

    `retweeted?` は、既にリツイートしている場合 `true` を、わからないか、リツイートしていない場合は `false` を返す。

    このspellは、リツイートが可能か否かは確認しない。そういった用途には、 [retweet[twitter,tweet]](#retweet-twitter-tweet) を利用すべきである。
  target:
    - name: twitter
      description: リツイートを行ったか確認するアカウント
    - name: tweet
      description: リツイートされているか確認するツイート
  returns:
    リツイートした結果生成されたツイート(Plugin::Twitter::Tweet)
  example:
    - title: リツイートをすでにしていれば、そのIDを出力
      code: |-
        world, = Plugin.filtering(:world_current, nil)
        tweet = Message.findbyid(933936591445331968)# (Plugin::Twitter::Tweetのインスタンス)

        retweeted(world, tweet).next{|retweet|
          notice retweet.id
        }.trap{|exc|
          error exc
        }
      result: "935447389174824960"
    - title: リツイートをすでにしていれば、「もうリツイートしているみたいです」と表示
      code: |-
        world, = Plugin.filtering(:world_current, nil)
        tweet = # (Plugin::Twitter::Tweetのインスタンス)

        if retweeted?(world, tweet)
          puts "もうリツイートしているみたいです"
        end
      result: "もうリツイートしているみたいです"
